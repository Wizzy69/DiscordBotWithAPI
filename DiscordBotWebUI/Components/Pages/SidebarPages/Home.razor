@page "/"

@using DiscordBotCore.Others
@using DiscordBotCore.Others.Exceptions
@using DiscordBotWebUI.Components.Pages.Setup
@using DiscordBotWebUI.DiscordBot

@inject DialogService DialogService

<RadzenButton Text="Start" Click="Initialize"/>
<RadzenTextArea Placeholder="Logs..." Value="@_TextValue" Style="width: 100%; height: 80%"/>


@code {
    private string? _TextValue;
    
    private async Task Solver(ModuleRequirement moduleRequirement)
    {
        while (await DialogService.OpenAsync<SetupWizard>("Setup Wizard", new Dictionary<string, object> {{"RequirementsToDownload", moduleRequirement}}) != true)
        {
            Console.WriteLine("Failed to complete the setup. Invalid data acquired ...");
        }
    }

    private async Task Initialize()
    {
        Action<string, LogType> logging = async (str, type) => {
            _TextValue += $"[{type}] {str} \n";
            await InvokeAsync(StateHasChanged);
        };

        var discordApplication = new DiscordApplication(logging, Solver);
        await discordApplication.Start();
    }
    
    // private async void Initialize()
    // {
    //     _DiscordBotStartup = new DiscordBotStartup { RequirementsSolver = default! };
    //     await _DiscordBotStartup.CreateApplication();
    //     
    //     _DiscordBotStartup.Log = async (str, type) => {
    //         _TextValue += $"[{type}] {str} \n";
    //         await InvokeAsync(StateHasChanged);
    //         
    //         Console.WriteLine(str);
    //     };
    //
    //     if (_DiscordBotStartup.LoadComponents())
    //     {
    //         await _DiscordBotStartup.PrepareBot();
    //         await _DiscordBotStartup.RefreshPlugins(false);
    //
    //         return;
    //     }
    //
    //     while (await DialogService.OpenAsync<Settings>("Please complete this setup before starting the bot") == false)
    //     {
    //         Console.WriteLine("Failed to complete the setup. Invalid data acquired ...");
    //     }
    //     
    //     await _DiscordBotStartup.PrepareBot();
    //     await _DiscordBotStartup.RefreshPlugins(false);
    // }
}